
// This file has been generated by the GUI designer. Do not modify.
namespace MonoGame.Tools.Pipeline
{
	internal partial class GtkView
	{
		private global::Gtk.UIManager UIManager;
		
		private global::Gtk.Action FileAction;
		
		private global::Gtk.Action newAction;
		
		private global::Gtk.Action openAction;
		
		private global::Gtk.Action closeAction;
		
		private global::Gtk.Action quitAction;
		
		private global::Gtk.Action ImportAction;
		
		private global::Gtk.Action saveAction;
		
		private global::Gtk.Action saveAsAction;
		
		private global::Gtk.Action EditAction;
		
		private global::Gtk.Action undoAction;
		
		private global::Gtk.Action redoAction;
		
		private global::Gtk.Action addAction;
		
		private global::Gtk.Action AddItemAction;
		
		private global::Gtk.Action removeAction;
		
		private global::Gtk.Action BuildAction;
		
		private global::Gtk.Action executeAction;
		
		private global::Gtk.Action refreshAction;
		
		private global::Gtk.Action clearAction;
		
		private global::Gtk.Action stopAction;
		
		private global::Gtk.ToggleAction DebugModeAction;
		
		private global::Gtk.Action HelpMenu;
		
		private global::Gtk.Action helpAction;
		
		private global::Gtk.Action aboutAction;
		
		private global::Gtk.VBox vbox1;
		
		private global::Gtk.MenuBar menubar;
		
		private global::Gtk.HPaned mainPaned;
		
		private global::Gtk.VPaned vpaned1;
		
		private global::Gtk.ScrolledWindow GtkScrolledWindow;
		
		private global::Gtk.TreeView _treeView;
		
		private global::Gtk.Fixed fixed1;
		
		private global::Gtk.ScrolledWindow GtkScrolledWindow1;
		
		private global::Gtk.TextView outputView;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MonoGame.Tools.Pipeline.GtkView
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
			this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("File"), null, "gtk-file");
			this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
			w1.Add (this.FileAction, null);
			this.newAction = new global::Gtk.Action ("newAction", global::Mono.Unix.Catalog.GetString ("_New"), null, "gtk-new");
			this.newAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_New");
			w1.Add (this.newAction, null);
			this.openAction = new global::Gtk.Action ("openAction", global::Mono.Unix.Catalog.GetString ("_Abrir..."), null, "gtk-open");
			this.openAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Abrir...");
			w1.Add (this.openAction, null);
			this.closeAction = new global::Gtk.Action ("closeAction", global::Mono.Unix.Catalog.GetString ("_Fechar"), null, "gtk-close");
			this.closeAction.Sensitive = false;
			this.closeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Fechar");
			w1.Add (this.closeAction, null);
			this.quitAction = new global::Gtk.Action ("quitAction", global::Mono.Unix.Catalog.GetString ("E_xit"), null, "gtk-quit");
			this.quitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("E_xit");
			w1.Add (this.quitAction, null);
			this.ImportAction = new global::Gtk.Action ("ImportAction", global::Mono.Unix.Catalog.GetString ("Import..."), null, null);
			this.ImportAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Import...");
			w1.Add (this.ImportAction, null);
			this.saveAction = new global::Gtk.Action ("saveAction", global::Mono.Unix.Catalog.GetString ("_Save"), null, "gtk-save");
			this.saveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Save");
			w1.Add (this.saveAction, null);
			this.saveAsAction = new global::Gtk.Action ("saveAsAction", global::Mono.Unix.Catalog.GetString ("Save as..."), null, "gtk-save-as");
			this.saveAsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save as...");
			w1.Add (this.saveAsAction, null);
			this.EditAction = new global::Gtk.Action ("EditAction", global::Mono.Unix.Catalog.GetString ("Edit"), null, null);
			this.EditAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Edit");
			w1.Add (this.EditAction, null);
			this.undoAction = new global::Gtk.Action ("undoAction", global::Mono.Unix.Catalog.GetString ("Desfa_zer"), null, "gtk-undo");
			this.undoAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Desfa_zer");
			w1.Add (this.undoAction, null);
			this.redoAction = new global::Gtk.Action ("redoAction", global::Mono.Unix.Catalog.GetString ("_Refazer"), null, "gtk-redo");
			this.redoAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Refazer");
			w1.Add (this.redoAction, null);
			this.addAction = new global::Gtk.Action ("addAction", global::Mono.Unix.Catalog.GetString ("New Item"), null, "gtk-add");
			this.addAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("New Item");
			w1.Add (this.addAction, null);
			this.AddItemAction = new global::Gtk.Action ("AddItemAction", global::Mono.Unix.Catalog.GetString ("Add Item"), null, null);
			this.AddItemAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Add Item");
			w1.Add (this.AddItemAction, null);
			this.removeAction = new global::Gtk.Action ("removeAction", global::Mono.Unix.Catalog.GetString ("Delete Item"), null, "gtk-remove");
			this.removeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Delete Item");
			w1.Add (this.removeAction, null);
			this.BuildAction = new global::Gtk.Action ("BuildAction", global::Mono.Unix.Catalog.GetString ("Build"), null, null);
			this.BuildAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Build");
			w1.Add (this.BuildAction, null);
			this.executeAction = new global::Gtk.Action ("executeAction", global::Mono.Unix.Catalog.GetString ("Build"), null, "gtk-execute");
			this.executeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Build");
			w1.Add (this.executeAction, null);
			this.refreshAction = new global::Gtk.Action ("refreshAction", global::Mono.Unix.Catalog.GetString ("Rebuild"), null, "gtk-refresh");
			this.refreshAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Rebuild");
			w1.Add (this.refreshAction, null);
			this.clearAction = new global::Gtk.Action ("clearAction", global::Mono.Unix.Catalog.GetString ("Clean"), null, "gtk-clear");
			this.clearAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Clean");
			w1.Add (this.clearAction, null);
			this.stopAction = new global::Gtk.Action ("stopAction", global::Mono.Unix.Catalog.GetString ("Cancel"), null, "gtk-stop");
			this.stopAction.Sensitive = false;
			this.stopAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Cancel");
			this.stopAction.Visible = false;
			w1.Add (this.stopAction, null);
			this.DebugModeAction = new global::Gtk.ToggleAction ("DebugModeAction", global::Mono.Unix.Catalog.GetString ("Debug Mode"), null, null);
			this.DebugModeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Debug Mode");
			w1.Add (this.DebugModeAction, null);
			this.HelpMenu = new global::Gtk.Action ("HelpMenu", global::Mono.Unix.Catalog.GetString ("Help"), null, "gtk-help");
			this.HelpMenu.ShortLabel = global::Mono.Unix.Catalog.GetString ("Help");
			w1.Add (this.HelpMenu, null);
			this.helpAction = new global::Gtk.Action ("helpAction", global::Mono.Unix.Catalog.GetString ("View Help..."), null, "gtk-help");
			this.helpAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("View Help...");
			w1.Add (this.helpAction, null);
			this.aboutAction = new global::Gtk.Action ("aboutAction", global::Mono.Unix.Catalog.GetString ("About"), null, "gtk-about");
			this.aboutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("About");
			w1.Add (this.aboutAction, null);
			this.UIManager.InsertActionGroup (w1, 0);
			this.AddAccelGroup (this.UIManager.AccelGroup);
			this.Name = "MonoGame.Tools.Pipeline.GtkView";
			this.Title = global::Mono.Unix.Catalog.GetString ("Monogame Pipeline Builder");
			this.WindowPosition = ((global::Gtk.WindowPosition)(1));
			this.DefaultWidth = 800;
			this.DefaultHeight = 600;
			// Container child MonoGame.Tools.Pipeline.GtkView.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString ("<ui><menubar name='menubar'><menu name='FileAction' action='FileAction'><menuitem name='newAction' action='newAction'/><menuitem name='openAction' action='openAction'/><menuitem name='closeAction' action='closeAction'/><separator/><menuitem name='ImportAction' action='ImportAction'/><separator/><menuitem name='saveAction' action='saveAction'/><menuitem name='saveAsAction' action='saveAsAction'/><separator/><menuitem name='quitAction' action='quitAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='undoAction' action='undoAction'/><menuitem name='redoAction' action='redoAction'/><separator/><menuitem name='addAction' action='addAction'/><menuitem name='AddItemAction' action='AddItemAction'/><separator/><menuitem name='removeAction' action='removeAction'/></menu><menu name='BuildAction' action='BuildAction'><menuitem name='executeAction' action='executeAction'/><menuitem name='refreshAction' action='refreshAction'/><menuitem name='clearAction' action='clearAction'/><menuitem name='stopAction' action='stopAction'/><separator/><menuitem name='DebugModeAction' action='DebugModeAction'/></menu><menu name='HelpMenu' action='HelpMenu'><menuitem name='helpAction' action='helpAction'/><separator/><menuitem name='aboutAction' action='aboutAction'/></menu></menubar></ui>");
			this.menubar = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubar")));
			this.menubar.Name = "menubar";
			this.vbox1.Add (this.menubar);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.menubar]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.mainPaned = new global::Gtk.HPaned ();
			this.mainPaned.CanFocus = true;
			this.mainPaned.Name = "mainPaned";
			this.mainPaned.Position = 196;
			// Container child mainPaned.Gtk.Paned+PanedChild
			this.vpaned1 = new global::Gtk.VPaned ();
			this.vpaned1.CanFocus = true;
			this.vpaned1.Name = "vpaned1";
			this.vpaned1.Position = 76;
			// Container child vpaned1.Gtk.Paned+PanedChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this._treeView = new global::Gtk.TreeView ();
			this._treeView.CanFocus = true;
			this._treeView.Name = "_treeView";
			this._treeView.Reorderable = true;
			this.GtkScrolledWindow.Add (this._treeView);
			this.vpaned1.Add (this.GtkScrolledWindow);
			global::Gtk.Paned.PanedChild w4 = ((global::Gtk.Paned.PanedChild)(this.vpaned1 [this.GtkScrolledWindow]));
			w4.Resize = false;
			// Container child vpaned1.Gtk.Paned+PanedChild
			this.fixed1 = new global::Gtk.Fixed ();
			this.fixed1.Name = "fixed1";
			this.fixed1.HasWindow = false;
			this.vpaned1.Add (this.fixed1);
			this.mainPaned.Add (this.vpaned1);
			global::Gtk.Paned.PanedChild w6 = ((global::Gtk.Paned.PanedChild)(this.mainPaned [this.vpaned1]));
			w6.Resize = false;
			// Container child mainPaned.Gtk.Paned+PanedChild
			this.GtkScrolledWindow1 = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow1.Name = "GtkScrolledWindow1";
			this.GtkScrolledWindow1.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow1.Gtk.Container+ContainerChild
			this.outputView = new global::Gtk.TextView ();
			this.outputView.CanFocus = true;
			this.outputView.Name = "outputView";
			this.outputView.Editable = false;
			this.outputView.CursorVisible = false;
			this.outputView.WrapMode = ((global::Gtk.WrapMode)(3));
			this.outputView.PixelsAboveLines = 12;
			this.outputView.LeftMargin = 12;
			this.outputView.RightMargin = 12;
			this.GtkScrolledWindow1.Add (this.outputView);
			this.mainPaned.Add (this.GtkScrolledWindow1);
			this.vbox1.Add (this.mainPaned);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.mainPaned]));
			w9.Position = 1;
			this.Add (this.vbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Show ();
			this.newAction.Activated += new global::System.EventHandler (this.OnNewActionActivated);
			this.openAction.Activated += new global::System.EventHandler (this.OnOpenActionActivated);
			this.closeAction.Activated += new global::System.EventHandler (this.OnCloseActionActivated);
			this.quitAction.Activated += new global::System.EventHandler (this.OnQuitActionActivated);
			this.ImportAction.Activated += new global::System.EventHandler (this.OnImportActionActivated);
			this.saveAction.Activated += new global::System.EventHandler (this.OnSaveActionActivated);
			this.saveAsAction.Activated += new global::System.EventHandler (this.OnSaveAsActionActivated);
			this.undoAction.Activated += new global::System.EventHandler (this.OnUndoActionActivated);
			this.redoAction.Activated += new global::System.EventHandler (this.OnRedoActionActivated);
			this.addAction.Activated += new global::System.EventHandler (this.OnAddActionActivated);
			this.AddItemAction.Activated += new global::System.EventHandler (this.OnAddItemActionActivated);
			this.removeAction.Activated += new global::System.EventHandler (this.OnRemoveActionActivated);
			this.executeAction.Activated += new global::System.EventHandler (this.OnExecuteActionActivated);
			this.refreshAction.Activated += new global::System.EventHandler (this.OnRefreshActionActivated);
		}
	}
}
